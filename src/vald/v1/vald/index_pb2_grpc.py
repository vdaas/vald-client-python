# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from vald.v1.payload import payload_pb2 as vald_dot_v1_dot_payload_dot_payload__pb2


class IndexStub(object):
    """Represent the index manager service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IndexInfo = channel.unary_unary(
                '/vald.v1.Index/IndexInfo',
                request_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
                response_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.Count.FromString,
                _registered_method=True)
        self.IndexDetail = channel.unary_unary(
                '/vald.v1.Index/IndexDetail',
                request_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
                response_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.Detail.FromString,
                _registered_method=True)
        self.IndexStatistics = channel.unary_unary(
                '/vald.v1.Index/IndexStatistics',
                request_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
                response_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.Statistics.FromString,
                _registered_method=True)
        self.IndexStatisticsDetail = channel.unary_unary(
                '/vald.v1.Index/IndexStatisticsDetail',
                request_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
                response_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.StatisticsDetail.FromString,
                _registered_method=True)
        self.IndexProperty = channel.unary_unary(
                '/vald.v1.Index/IndexProperty',
                request_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
                response_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.PropertyDetail.FromString,
                _registered_method=True)


class IndexServicer(object):
    """Represent the index manager service.
    """

    def IndexInfo(self, request, context):
        """Represent the RPC to get the index information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexDetail(self, request, context):
        """Represent the RPC to get the index information for each agents.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexStatistics(self, request, context):
        """Represent the RPC to get the index statistics.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexStatisticsDetail(self, request, context):
        """Represent the RPC to get the index statistics for each agents.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexProperty(self, request, context):
        """Represent the RPC to get the index property.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IndexServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IndexInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexInfo,
                    request_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.FromString,
                    response_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.Count.SerializeToString,
            ),
            'IndexDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexDetail,
                    request_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.FromString,
                    response_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.Detail.SerializeToString,
            ),
            'IndexStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexStatistics,
                    request_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.FromString,
                    response_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.Statistics.SerializeToString,
            ),
            'IndexStatisticsDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexStatisticsDetail,
                    request_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.FromString,
                    response_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.StatisticsDetail.SerializeToString,
            ),
            'IndexProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexProperty,
                    request_deserializer=vald_dot_v1_dot_payload_dot_payload__pb2.Empty.FromString,
                    response_serializer=vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.PropertyDetail.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vald.v1.Index', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('vald.v1.Index', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Index(object):
    """Represent the index manager service.
    """

    @staticmethod
    def IndexInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vald.v1.Index/IndexInfo',
            vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
            vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.Count.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IndexDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vald.v1.Index/IndexDetail',
            vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
            vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.Detail.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IndexStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vald.v1.Index/IndexStatistics',
            vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
            vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.Statistics.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IndexStatisticsDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vald.v1.Index/IndexStatisticsDetail',
            vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
            vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.StatisticsDetail.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IndexProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vald.v1.Index/IndexProperty',
            vald_dot_v1_dot_payload_dot_payload__pb2.Empty.SerializeToString,
            vald_dot_v1_dot_payload_dot_payload__pb2.Info.Index.PropertyDetail.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
